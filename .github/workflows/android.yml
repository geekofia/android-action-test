name: Build and Release Android APK

env:
  # The name of the main module repository
  main_project_module: app

on:
  push:
    branches: ["main"]
    tags:
      - "*"

  pull_request:
    branches: ["main"]

  # allows to run this workflow manually from the actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # set current date as env variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # set repository name as env variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "zulu"
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run gradle tests
        run: ./gradlew test

      - name: Build gradle project
        run: ./gradlew build

      - name: Create debug APK - ${{ env.main_project_module }} module
        run: ./gradlew assembleDebug

      - name: Create release APK - ${{ env.main_project_module }} module
        run: ./gradlew assemble

      - name: Create release AAB - ${{ env.main_project_module }} module
        run: ./gradlew ${{ env.main_project_module }}:bundleRelease

      # noted for output [main_project_module]/build/outputs/apk/debug/
      - name: Upload debug APK - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk # this name will be used to download artifects
          path: ${{ env.main_project_module }}/build/outputs/apk/debug/app-debug.apk

      # noted for output [main_project_module]/release/
      # - name: Upload release APK - ${{ env.repository_name }}
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: app-release.apk # this name will be used to download artifects
      #     path: ${{ env.main_project_module }}/release/app-release.apk

      # noted for output [main_project_module]/build/outputs/bundle/release/
      - name: Upload release AAB - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: app-release.aab # this name will be used to download artifects
          path: ${{ env.main_project_module }}/build/outputs/bundle/release/app-release.aab

  release:
    name: Release APK
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v3
        with:
          name: app-debug.apk # this name will be used to download artifects

      - name: Update Release
        id: update_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          artifacts: app-debug.apk
          removeArtifacts: true
          name: Release ${{ github.ref }}
          generateReleaseNotes: true
          allowUpdates: true

      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          # where to upload
          upload_url: ${{ steps.update_release.outputs.upload_url }}
          # grab file from this path
          asset_path: build/app-debug.apk
          # rename the file in release
          asset_name: ${{ env.date_today }}-${{ env.repository_name }}.apk
          # https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
          asset_content_type: application/octet-stream
