name: Build and Release Android APK

env:
  # The name of the main module repository
  main_project_module: app

on:
  push:
    branches: ["main"]
    tags:
      - "*"

  pull_request:
    branches: ["main"]

  # allows to run this workflow manually from the actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # set current date as env variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # set repository name as env variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "zulu"
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run gradle tests
        run: ./gradlew test

      - name: Build gradle project
        run: ./gradlew build

      # create debug APK
      - name: Create debug APK - ${{ env.main_project_module }} module
        run: ./gradlew assembleDebug

      # create release APK
      - name: Create release APK - ${{ env.main_project_module }} module
        run: ./gradlew assemble

      # create release AAB
      - name: Create release AAB - ${{ env.main_project_module }} module
        run: ./gradlew ${{ env.main_project_module }}:bundleRelease

      # noted for output [main_project_module]/build/outputs/apk/debug/
      - name: Upload debug APK - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.main_project_module }}-debug-apk
          path: ${{ env.main_project_module }}/build/outputs/apk/debug/${{ env.main_project_module }}-debug.apk

      # noted for output [main_project_module]/build/outputs/apk/release/
      - name: Upload release APK - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.main_project_module }}-release-unsigned-apk
          path: ${{ env.main_project_module }}/build/outputs/apk/release/${{ env.main_project_module }}-release-unsigned.apk

      # noted for output [main_project_module]/build/outputs/bundle/release/
      - name: Upload release AAB - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.main_project_module }}-release-aab
          path: ${{ env.main_project_module }}/build/outputs/bundle/release/

  release:
    name: Release APK
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Download debug APK from build
        # https://github.com/actions/download-artifact
        uses: actions/download-artifact@v3 # download all artifects
        with:
          name: ${{ env.main_project_module }}-debug-apk

      - name: Download release APK from build
        # https://github.com/actions/download-artifact
        uses: actions/download-artifact@v3 # download all artifects
        with:
          name: ${{ env.main_project_module }}-release-unsigned-apk

      - name: Download release AAB from build
        # https://github.com/actions/download-artifact
        uses: actions/download-artifact@v3 # download all artifects
        with:
          name: ${{ env.main_project_module }}-release-aab

      - name: Display structure of downloaded files
        run: ls -R ${{steps.download.outputs.download-path}}

      - name: Update Release
        id: update_release
        # https://github.com/ncipollo/release-action
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          artifacts: "${{ env.main_project_module }}-debug.apk,${{ env.main_project_module }}-release-unsigned.apk,${{ env.main_project_module }}-release.aab"
          removeArtifacts: true
          name: Release ${{ github.ref_name }}
          generateReleaseNotes: true
          allowUpdates: true
